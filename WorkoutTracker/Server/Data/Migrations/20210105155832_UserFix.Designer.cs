// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutTracker.Server.Data;

namespace WorkoutTracker.Server.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210105155832_UserFix")]
    partial class UserFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WorkoutTracker.Server.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.CompletedSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompletedWorkoutExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("SetNumber")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompletedWorkoutExerciseId");

                    b.ToTable("CompletedSets");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.CompletedWorkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateComplete")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.Property<string>("WorkoutName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompletedWorkouts");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.CompletedWorkoutExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompletedWorkoutId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutExerciseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompletedWorkoutId");

                    b.HasIndex("WorkoutExerciseId");

                    b.ToTable("CompletedWorkoutExercises");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Barbell"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dumbbell"
                        },
                        new
                        {
                            Id = 3,
                            Name = "BodyWeight"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Plate Loaded Machine"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Weight Stack Machine"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Smith Machine"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Cable Machine"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Kettlebell"
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("MuscleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("MuscleGroupId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EquipmentId = 1,
                            MuscleGroupId = 9,
                            Name = "High Bar Back Squat"
                        },
                        new
                        {
                            Id = 2,
                            EquipmentId = 1,
                            MuscleGroupId = 9,
                            Name = "Low Bar Back Squat"
                        },
                        new
                        {
                            Id = 3,
                            EquipmentId = 1,
                            MuscleGroupId = 9,
                            Name = "Front Squat"
                        },
                        new
                        {
                            Id = 4,
                            EquipmentId = 4,
                            MuscleGroupId = 9,
                            Name = "Leg Press"
                        },
                        new
                        {
                            Id = 5,
                            EquipmentId = 4,
                            MuscleGroupId = 9,
                            Name = "Hack Squat"
                        },
                        new
                        {
                            Id = 6,
                            EquipmentId = 6,
                            MuscleGroupId = 9,
                            Name = "Smith Machine Squat"
                        },
                        new
                        {
                            Id = 7,
                            EquipmentId = 2,
                            MuscleGroupId = 9,
                            Name = "Bulgarian Split Squat"
                        },
                        new
                        {
                            Id = 8,
                            EquipmentId = 1,
                            MuscleGroupId = 4,
                            Name = "Bench Press"
                        },
                        new
                        {
                            Id = 9,
                            EquipmentId = 1,
                            MuscleGroupId = 4,
                            Name = "Incline Bench Press"
                        },
                        new
                        {
                            Id = 10,
                            EquipmentId = 1,
                            MuscleGroupId = 4,
                            Name = "Decline Bench Press"
                        },
                        new
                        {
                            Id = 11,
                            EquipmentId = 2,
                            MuscleGroupId = 4,
                            Name = "Dumbbell Incline Bench Press"
                        },
                        new
                        {
                            Id = 12,
                            EquipmentId = 2,
                            MuscleGroupId = 4,
                            Name = "Dumbbell Flat Bench Press"
                        },
                        new
                        {
                            Id = 13,
                            EquipmentId = 2,
                            MuscleGroupId = 4,
                            Name = "Dumbbell Decline Bench Press"
                        },
                        new
                        {
                            Id = 14,
                            EquipmentId = 4,
                            MuscleGroupId = 4,
                            Name = "Plate Loaded Chest Press"
                        },
                        new
                        {
                            Id = 15,
                            EquipmentId = 4,
                            MuscleGroupId = 4,
                            Name = "Plate Loaded Incline Chest Press"
                        },
                        new
                        {
                            Id = 16,
                            EquipmentId = 4,
                            MuscleGroupId = 4,
                            Name = "Plate Loaded Decline Chest Press"
                        },
                        new
                        {
                            Id = 17,
                            EquipmentId = 5,
                            MuscleGroupId = 4,
                            Name = "Weight Stack Decline Chest Press"
                        },
                        new
                        {
                            Id = 18,
                            EquipmentId = 5,
                            MuscleGroupId = 4,
                            Name = "Weight Stack Chest Press"
                        },
                        new
                        {
                            Id = 19,
                            EquipmentId = 5,
                            MuscleGroupId = 4,
                            Name = "Weight Stack Incline Chest Press"
                        },
                        new
                        {
                            Id = 20,
                            EquipmentId = 5,
                            MuscleGroupId = 4,
                            Name = "Pec Dec"
                        },
                        new
                        {
                            Id = 21,
                            EquipmentId = 7,
                            MuscleGroupId = 4,
                            Name = "Cable Flies"
                        },
                        new
                        {
                            Id = 22,
                            EquipmentId = 7,
                            MuscleGroupId = 4,
                            Name = "Cable Flies (Upper Chest)"
                        },
                        new
                        {
                            Id = 23,
                            EquipmentId = 3,
                            MuscleGroupId = 4,
                            Name = "Pushups"
                        },
                        new
                        {
                            Id = 24,
                            EquipmentId = 3,
                            MuscleGroupId = 4,
                            Name = "Feet Elevated Pushups"
                        },
                        new
                        {
                            Id = 25,
                            EquipmentId = 3,
                            MuscleGroupId = 4,
                            Name = "Hands Elevated Pushups"
                        },
                        new
                        {
                            Id = 26,
                            EquipmentId = 3,
                            MuscleGroupId = 4,
                            Name = "Dips"
                        },
                        new
                        {
                            Id = 27,
                            EquipmentId = 3,
                            MuscleGroupId = 8,
                            Name = "Pullups"
                        },
                        new
                        {
                            Id = 28,
                            EquipmentId = 3,
                            MuscleGroupId = 8,
                            Name = "Chinups"
                        },
                        new
                        {
                            Id = 29,
                            EquipmentId = 3,
                            MuscleGroupId = 8,
                            Name = "Neutral Grip Chinups"
                        },
                        new
                        {
                            Id = 30,
                            EquipmentId = 5,
                            MuscleGroupId = 8,
                            Name = "Neutral Grip Lat Pulldown"
                        },
                        new
                        {
                            Id = 31,
                            EquipmentId = 5,
                            MuscleGroupId = 8,
                            Name = "Overhand Lat Pulldown"
                        },
                        new
                        {
                            Id = 32,
                            EquipmentId = 5,
                            MuscleGroupId = 8,
                            Name = "Underhand Lat Pulldown"
                        },
                        new
                        {
                            Id = 33,
                            EquipmentId = 1,
                            MuscleGroupId = 15,
                            Name = "Bent Over Barbell Row"
                        },
                        new
                        {
                            Id = 34,
                            EquipmentId = 5,
                            MuscleGroupId = 15,
                            Name = "Seated Cable Row"
                        },
                        new
                        {
                            Id = 35,
                            EquipmentId = 2,
                            MuscleGroupId = 15,
                            Name = "Chest Supported Dumbbell Row"
                        },
                        new
                        {
                            Id = 36,
                            EquipmentId = 2,
                            MuscleGroupId = 15,
                            Name = "1 Arm Dumbbell Row"
                        },
                        new
                        {
                            Id = 37,
                            EquipmentId = 4,
                            MuscleGroupId = 15,
                            Name = "Plate Loaded High Row"
                        },
                        new
                        {
                            Id = 38,
                            EquipmentId = 4,
                            MuscleGroupId = 15,
                            Name = "Plate Loaded Low Row"
                        },
                        new
                        {
                            Id = 39,
                            EquipmentId = 4,
                            MuscleGroupId = 8,
                            Name = "Plate Loaded Lat Pulldown"
                        },
                        new
                        {
                            Id = 40,
                            EquipmentId = 5,
                            MuscleGroupId = 8,
                            Name = "Weight Stack Lat Pulldown"
                        },
                        new
                        {
                            Id = 41,
                            EquipmentId = 5,
                            MuscleGroupId = 15,
                            Name = "Weight Stack Chest Supported Row"
                        },
                        new
                        {
                            Id = 42,
                            EquipmentId = 1,
                            MuscleGroupId = 7,
                            Name = "Romanian Deadlift"
                        },
                        new
                        {
                            Id = 43,
                            EquipmentId = 1,
                            MuscleGroupId = 7,
                            Name = "Deadlift"
                        },
                        new
                        {
                            Id = 44,
                            EquipmentId = 1,
                            MuscleGroupId = 7,
                            Name = "Stiff Legged Deadlift"
                        },
                        new
                        {
                            Id = 45,
                            EquipmentId = 1,
                            MuscleGroupId = 7,
                            Name = "Sumo Deadlift"
                        },
                        new
                        {
                            Id = 46,
                            EquipmentId = 1,
                            MuscleGroupId = 7,
                            Name = "Deficit Deadlift"
                        },
                        new
                        {
                            Id = 47,
                            EquipmentId = 2,
                            MuscleGroupId = 7,
                            Name = "Dumbell Romanian Deadlift"
                        },
                        new
                        {
                            Id = 48,
                            EquipmentId = 2,
                            MuscleGroupId = 7,
                            Name = "Dumbell Stiff Legged Deadlift"
                        },
                        new
                        {
                            Id = 49,
                            EquipmentId = 2,
                            MuscleGroupId = 7,
                            Name = "Dumbell Sumo Deadlift"
                        },
                        new
                        {
                            Id = 50,
                            EquipmentId = 5,
                            MuscleGroupId = 7,
                            Name = "Laying Leg Curl"
                        },
                        new
                        {
                            Id = 51,
                            EquipmentId = 5,
                            MuscleGroupId = 7,
                            Name = "Standing Leg Curl"
                        },
                        new
                        {
                            Id = 52,
                            EquipmentId = 5,
                            MuscleGroupId = 7,
                            Name = "Seated Leg Curl"
                        },
                        new
                        {
                            Id = 53,
                            EquipmentId = 1,
                            MuscleGroupId = 10,
                            Name = "Barbell Shoulder Press (Standing)"
                        },
                        new
                        {
                            Id = 54,
                            EquipmentId = 1,
                            MuscleGroupId = 10,
                            Name = "Barbell Shoulder Press (Seated)"
                        },
                        new
                        {
                            Id = 55,
                            EquipmentId = 2,
                            MuscleGroupId = 10,
                            Name = "Dumbbell Shoulder Press (Seated)"
                        },
                        new
                        {
                            Id = 56,
                            EquipmentId = 2,
                            MuscleGroupId = 10,
                            Name = "Dumbbell Shoulder Press (Standing)"
                        },
                        new
                        {
                            Id = 57,
                            EquipmentId = 2,
                            MuscleGroupId = 10,
                            Name = "Arnold Press (Standing)"
                        },
                        new
                        {
                            Id = 58,
                            EquipmentId = 2,
                            MuscleGroupId = 10,
                            Name = "Arnold Press (Seated)"
                        },
                        new
                        {
                            Id = 59,
                            EquipmentId = 4,
                            MuscleGroupId = 10,
                            Name = "Plate Loaded Shoulder Press"
                        },
                        new
                        {
                            Id = 60,
                            EquipmentId = 5,
                            MuscleGroupId = 10,
                            Name = "Weight Stack Shoulder Press"
                        },
                        new
                        {
                            Id = 61,
                            EquipmentId = 2,
                            MuscleGroupId = 12,
                            Name = "Dumbbell Lateral Raises"
                        },
                        new
                        {
                            Id = 62,
                            EquipmentId = 7,
                            MuscleGroupId = 12,
                            Name = "Cable Lateral Raises"
                        },
                        new
                        {
                            Id = 63,
                            EquipmentId = 7,
                            MuscleGroupId = 12,
                            Name = "Cable Lateral Raises (1 Arm)"
                        },
                        new
                        {
                            Id = 64,
                            EquipmentId = 2,
                            MuscleGroupId = 10,
                            Name = "Dumbbell Front Raise"
                        },
                        new
                        {
                            Id = 65,
                            EquipmentId = 7,
                            MuscleGroupId = 10,
                            Name = "Cable Front Raise"
                        },
                        new
                        {
                            Id = 66,
                            EquipmentId = 2,
                            MuscleGroupId = 11,
                            Name = "Dumbbell Rear Delt Flies"
                        },
                        new
                        {
                            Id = 67,
                            EquipmentId = 7,
                            MuscleGroupId = 11,
                            Name = "Cable Rear Delt Flies"
                        },
                        new
                        {
                            Id = 68,
                            EquipmentId = 5,
                            MuscleGroupId = 11,
                            Name = "Reverse Pec Dec"
                        },
                        new
                        {
                            Id = 69,
                            EquipmentId = 1,
                            MuscleGroupId = 12,
                            Name = "Barbell Upright Row (Wide Grip)"
                        },
                        new
                        {
                            Id = 70,
                            EquipmentId = 1,
                            MuscleGroupId = 12,
                            Name = "Barbell Upright Row (Close Grip)"
                        },
                        new
                        {
                            Id = 71,
                            EquipmentId = 7,
                            MuscleGroupId = 12,
                            Name = "Cable Upright Row (Close Grip)"
                        },
                        new
                        {
                            Id = 72,
                            EquipmentId = 7,
                            MuscleGroupId = 12,
                            Name = "Cable Upright Row (Wide Grip)"
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.MuscleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MuscleGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Abs"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Biceps"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Calves"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Chest"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Forearms"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Glutes"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Hamstrings"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Lats"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Quads"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Shoulders (Front)"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Shoulders (Rear)"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Shoulders (Side)"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Traps"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Triceps"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Upper Back"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Cardio (Steady State)"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Cardio (HIIT)"
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.WeightLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("WeightLogs");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Scheduled")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.WorkoutExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderInt")
                        .HasColumnType("int");

                    b.Property<string>("OrderString")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("RepScheme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutExercises");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WorkoutTracker.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WorkoutTracker.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTracker.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WorkoutTracker.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.CompletedSet", b =>
                {
                    b.HasOne("WorkoutTracker.Shared.Entities.CompletedWorkoutExercise", null)
                        .WithMany("Sets")
                        .HasForeignKey("CompletedWorkoutExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.CompletedWorkoutExercise", b =>
                {
                    b.HasOne("WorkoutTracker.Shared.Entities.CompletedWorkout", null)
                        .WithMany("CompletedExercises")
                        .HasForeignKey("CompletedWorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTracker.Shared.Entities.WorkoutExercise", "WorkoutExercise")
                        .WithMany()
                        .HasForeignKey("WorkoutExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.Exercise", b =>
                {
                    b.HasOne("WorkoutTracker.Shared.Entities.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTracker.Shared.Entities.MuscleGroup", "MuscleGroup")
                        .WithMany()
                        .HasForeignKey("MuscleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Entities.WorkoutExercise", b =>
                {
                    b.HasOne("WorkoutTracker.Shared.Entities.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTracker.Shared.Entities.Workout", null)
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
